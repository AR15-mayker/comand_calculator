import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from dotenv import find_dotenv, load_dotenv

load_dotenv(find_dotenv())
TOKEN = os.getenv("TOKEN")

bot = Bot(TOKEN)
dp = Dispatcher()


@dp.message(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –ö–∞–º–∫—É–ª—è—Ç–æ—Ä üßÆ\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ \
        –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: `5 + 3`")


@dp.message()
async def calculate(message: types.Message):
    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º –≤—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏
        parts = message.text.split()
        if len(parts) != 3:
            await message.answer("–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π \
                —Ñ–æ—Ä–º–∞—Ç!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: —á–∏—Å–ª–æ \
                    –æ–ø–µ—Ä–∞—Ç–æ—Ä —á–∏—Å–ª–æ\n–ù–∞–ø—Ä–∏–º–µ—Ä: `5 + 3`")
            return

        num1 = float(parts[0])
        operator = parts[1]
        num2 = float(parts[2])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
        if operator not in ['+', '-', '*', '/']:
            await message.answer("–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π \
                –æ–ø–µ—Ä–∞—Ç–æ—Ä!\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã: +, -, *, /")
            return

        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ
        if operator == '+':
            result = num1 + num2
        elif operator == '-':
            result = num1 - num2
        elif operator == '*':
            result = num1 * num2
        elif operator == '/':
            if num2 == 0:
                await message.answer("–û—à–∏–±–∫–∞: –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ!")
                return
            result = num1 / num2

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await message.answer(f"{num1} {operator} {num2} = {result}")

    except ValueError:
        await message.answer("–û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–∞!")
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
        print(e)


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
